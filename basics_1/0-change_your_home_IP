#!/usr/bin/env bash
# Set hosts: localhost=127.0.0.2, facebook.com=8.8.8.8
# Needs sudo; makes timestamped backup; idempotent

set -euo pipefail

HOSTS_FILE="${HOSTS_FILE:-/etc/hosts}"
STAMP="$(date +%Y%m%d-%H%M%S)"
HOSTS_DIR="$(dirname "$HOSTS_FILE")"
HOSTS_BASE="$(basename "$HOSTS_FILE")"
BACKUP_FILE="${HOSTS_DIR}/${HOSTS_BASE}.bak-${STAMP}"

require_root() {
  # Require root only if write not allowed
  if [[ -w "$HOSTS_FILE" || -w "$HOSTS_DIR" ]]; then
    return
  fi
  if [[ ${EUID:-$(id -u)} -ne 0 ]]; then
    echo "This script must be run as root when modifying $HOSTS_FILE. Try: sudo $0" >&2
    exit 1
  fi
}

backup_hosts() {
  cp -p "$HOSTS_FILE" "$BACKUP_FILE"
  echo "Backup: $BACKUP_FILE"
}

apply_mappings() {
  # Write to temp, then replace atomically
  tmpfile="$(mktemp)"

  # Put required mappings first
  cat >"$tmpfile" <<'EOF'
127.0.0.2	localhost
8.8.8.8	facebook.com
EOF

  # Append existing hosts, drop lines containing these names
  awk '{
    drop=0;
    for (i=2;i<=NF;i++) {
      if ($i=="localhost" || $i=="facebook.com") { drop=1; break }
    }
    if (!drop) print
  }' "$HOSTS_FILE" >>"$tmpfile"

  # Replace atomically
  install -m 644 "$tmpfile" "$HOSTS_FILE"
  rm -f "$tmpfile"
}

main() {
  require_root

  if [[ ! -f "$HOSTS_FILE" ]]; then
    echo "Error: $HOSTS_FILE not found" >&2
    exit 1
  fi

  backup_hosts
  apply_mappings
  echo "Updated $HOSTS_FILE."
  echo "- localhost -> 127.0.0.2"
  echo "- facebook.com -> 8.8.8.8"
  echo "Revert: sudo cp '$BACKUP_FILE' '$HOSTS_FILE'"
}

main "$@"
